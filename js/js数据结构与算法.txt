1.对象始终为true
new Boolen(false)  // true
new Number(NaN) // true
{}  // true

2.相等操作符
以下表格分析不同类型的值用“==”操作符比较的结果

类型x			类型y			结果
null			undefined		true
undefined		null			true
数字			字符串			x == toNumber(y)
字符串			数字			toNumber(x) == y
布尔值			任何类型		toNumber(x) == y
任何类型		布尔值			x == toNumber(y)
字符串或数字	对象			x == toPrimitive(y)
对象			字符串或数字	toPrimitive(x) == y

如果x,y是相同类型 javascript会比较他们的值或对象值 其他没有在此表中的都返回false

toNumber方法如下

值类型					结果
undefined				NaN
null					0
布尔值					true返回1 , false返回0
数字					数字对应的值
字符串					如果含有字母，返回NaN  如果全是数字，则返回数字
对象					Number(toPrimitive(obj))

toPrimitive方法

对象 -------->  如果对象的valueOf方法的结果是原始值，返回原始值  如果对象的toString方法返回原始值 就返回这个值  其他情况返回错误

